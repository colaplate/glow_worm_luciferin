light:
  - platform: mqtt
    schema: json
    name: "PC AmbiLight"
    state_topic: "lights/pcambilight"
    command_topic: "lights/pcambiligh/set"
    effect: true
    effect_list:
      - AmbiLight
      - bpm
      - candy cane  
      - confetti  
      - cyclon rainbow  
      - dots  
      - fire  
      - glitter  
      - juggle  
      - lightning
      - noise  
      - police all  
      - police one  
      - rainbow  
      - solid rainbow
      - rainbow with glitter  
      - ripple  
      - sinelon  
      - solid  
      - twinkle  
    brightness: true
    rgb: true
    optimistic: true
    #transition: 1000

input_number:
  pc_animation_speed:
    name: PC Animation Speed
    initial: 40
    min: 1
    max: 150
    step: 1
    
input_boolean:
  effettosolido:
    name: Luci effetto solido

sensor:
  - platform: mqtt
    state_topic: 'lights/pcambilight'
    name: 'Last Seen Ambilight'
    value_template: '{{ value_json.time }}'    
  - platform: mqtt
    state_topic: 'lights/pcambilight'
    name: 'Ambilight Version'
    unit_of_measurement: ' '
    value_template: '{{ value_json.ver }}'   
    
automation:
  - id: '1551286434142'
    alias: Transizione Ambilight WE
    trigger:
    - at: '23:00:00'
      platform: time
    condition:
    - condition: state
      entity_id: light.pc_ambilight
      state: 'on'
    - condition: time
      weekday:
          - fri
          - sat
    - condition: template
      value_template: '{{ states.light.pc_ambilight.attributes.effect == "solid" }}'
    action:
    - data:
        payload: '{"state": "ON", "brightness": 255, "color": {"r": 127, "g": 0, "b":
          255}, "effect": "solid"}'
        topic: lights/pcambiligh/set
      service: mqtt.publish
    - delay: 00:05:00
    - data:
        payload: '{"state": "ON", "brightness": 255, "color": {"r": 191, "g": 0, "b":
          255}, "effect": "solid"}'
        topic: lights/pcambiligh/set
      service: mqtt.publish
    - delay: 00:05:00
    - data:
        payload: '{"state": "ON", "brightness": 255, "color": {"r": 255, "g": 0, "b":
          255}, "effect": "solid"}'
        topic: lights/pcambiligh/set
      service: mqtt.publish
    - delay: 00:05:00
    - data:
        payload: '{"state": "ON", "brightness": 255, "color": {"r": 255, "g": 0, "b":
          191}, "effect": "solid"}'
        topic: lights/pcambiligh/set
      service: mqtt.publish
    - delay: 00:05:00
    - data:
        payload: '{"state": "ON", "brightness": 255, "color": {"r": 255, "g": 0, "b":
          127}, "effect": "solid"}'
        topic: lights/pcambiligh/set
      service: mqtt.publish
    - delay: 00:05:00
    - data:
        payload: '{"state": "ON", "brightness": 255, "color": {"r": 255, "g": 0, "b":
          63}, "effect": "solid"}'
        topic: lights/pcambiligh/set
      service: mqtt.publish
  - id: '1551286434576'
    alias: Transizione Ambilight 
    trigger:
    - at: '21:00:00'
      platform: time
    condition:
    - condition: state
      entity_id: light.pc_ambilight
      state: 'on'
    - condition: template
      value_template: '{{ states.light.pc_ambilight.attributes.effect == "solid" }}'
    - condition: time
      weekday:
          - mon
          - tue
          - wed
          - thu
          - sun
    action:
    - data:
        payload: '{"state": "ON", "brightness": 255, "color": {"r": 127, "g": 0, "b":
          255}, "effect": "solid"}'
        topic: lights/pcambiligh/set
      service: mqtt.publish
    - delay: 00:05:00
    - data:
        payload: '{"state": "ON", "brightness": 255, "color": {"r": 191, "g": 0, "b":
          255}, "effect": "solid"}'
        topic: lights/pcambiligh/set
      service: mqtt.publish
    - delay: 00:05:00
    - data:
        payload: '{"state": "ON", "brightness": 255, "color": {"r": 255, "g": 0, "b":
          255}, "effect": "solid"}'
        topic: lights/pcambiligh/set
      service: mqtt.publish
    - delay: 00:05:00
    - data:
        payload: '{"state": "ON", "brightness": 255, "color": {"r": 255, "g": 0, "b":
          191}, "effect": "solid"}'
        topic: lights/pcambiligh/set
      service: mqtt.publish
    - delay: 00:05:00
    - data:
        payload: '{"state": "ON", "brightness": 255, "color": {"r": 255, "g": 0, "b":
          127}, "effect": "solid"}'
        topic: lights/pcambiligh/set
      service: mqtt.publish
    - delay: 00:05:00
    - data:
        payload: '{"state": "ON", "brightness": 255, "color": {"r": 255, "g": 0, "b":
          63}, "effect": "solid"}'
        topic: lights/pcambiligh/set
      service: mqtt.publish
  - id: '1548456985521'
    alias: Luci Effetto solido ON
    trigger:
    - entity_id: input_boolean.effettosolido
      from: 'off'
      platform: state
      to: 'on'
    action:
    - data:
        payload: '{"state": "ON", "effect": "solid"}'
        topic: lights/pcambiligh/set
      service: mqtt.publish
  - id: '1548456985522'
    alias: Luci Effetto solido OFF
    trigger:
    - entity_id: input_boolean.effettosolido
      from: 'on'
      platform: state
      to: 'off'
    action:
    - data:
        payload: '{"state": "ON", "effect": "AmbiLight"}'
        topic: lights/pcambiligh/set
      service: mqtt.publish
  - id: '4321674486'
    alias: PC Animation Speed
    initial_state: true
    trigger:
    - platform: state
      entity_id: input_number.pc_animation_speed
    action:
    - service: mqtt.publish
      data_template:
        topic: lights/pcambiligh/set
        payload: '{"transition":{{ trigger.to_state.state | int }}}'
  - id: '1598965484855'      
    alias: Ambilight  Alive
    trigger:
      platform: time_pattern
      seconds: '/60'
    condition:
      condition: template
      value_template: "{{ not (as_timestamp(now()) < (as_timestamp(states('sensor.last_seen_ambilight')) + 60)) }}"
    action:
    - data:
        message: "Ambilight ha smesso di rispondere!"
      service: notify.telegram_notifier
switch:
  - platform: mqtt
    name: "rebootambilight"
    command_topic: "cmnd/ambilight/reboot"
    state_topic: "stat/ambilight/reboot"
    qos: 1
    retain: false
    payload_on: "ON"
    payload_off: "OFF"  
    